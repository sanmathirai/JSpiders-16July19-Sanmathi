package com.ustglobal.empspringmvc.controller;

import java.text.SimpleDateFormat;
import java.util.Date;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpSession;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.propertyeditors.CustomDateEditor;
import org.springframework.stereotype.Controller;
import org.springframework.ui.ModelMap;
import org.springframework.web.bind.WebDataBinder;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.InitBinder;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.SessionAttribute;

import com.ustglobal.empspringmvc.dto.EmployeeBean;
import com.ustglobal.empspringmvc.service.EmployeeService;


@Controller
public class EmployeeController {

	@InitBinder
	public void initBinder(WebDataBinder binder) {
		SimpleDateFormat format = new SimpleDateFormat("yyyy-MM-dd");
		CustomDateEditor editor = new CustomDateEditor(format, true);
		binder.registerCustomEditor(Date.class, editor);
	}

	//private EmployeeService service = new EmployeeServiceImpl();//creating manually We can do it with the help of spring spring using auto wire
	@Autowired
	private EmployeeService service;



	/* ****To Redirect to login******* */
	@GetMapping("/login")
	public String loginPage() {
		return "login";
	}
	/* ******To manage after login if its valid go to login else home page***** */

	@PostMapping("/login")
	public String login(int id, String password, HttpServletRequest request) {
		EmployeeBean bean = service.login(id, password);//if bean nul invlid
		if(bean == null) {
			request.setAttribute("msg", "Invalid credentials :(");
			return "login";
		}else {
			HttpSession session = request.getSession();//equivalent to getsession(true)
			session.setAttribute("bean", bean);
			return "home";
		}
	}
	/* ****To Redirect to register******* */
	@GetMapping("/register")
	public String registerPage() {
		return "register";
	}
	/* ****To Redirect after register******* */
	@PostMapping("/register")
	public String register(EmployeeBean bean , ModelMap map) {
		int check = service.register(bean);
		if (check>0) {
			map.addAttribute("msg", "you are registerd . and Id is" +check);
		} else {
			map.addAttribute("msg", "Email Is repeated");
		}
		return "login";

	}

	@GetMapping("/home")
	public String home(@SessionAttribute(name = "bean", required =false) EmployeeBean bean ,ModelMap map) {
		if(bean == null) {
			map.addAttribute("msg" , "Please login");
			return "login";
		}
		else{
			return "home";

		}
	}

	@PostMapping("/home")
	public String home() {
		return "home";
	}
	@GetMapping("/search")
	public String search(@RequestParam("id") int id, ModelMap map) {
		EmployeeBean bean =  service.searchEmployee(id);
		if(bean== null) {
			map.addAttribute("msg", "Data not found");
		}else {
			map.addAttribute("bean", bean);


		}
		return "home";
	}
	@GetMapping("/logout")
	public String logout(HttpSession session) {
		session.invalidate();
		return "login";
	}
	@GetMapping("/delete")
	public String deleteProfile(HttpSession session) {
		EmployeeBean bean = (EmployeeBean) session.getAttribute("bean");
		try {
			service.deleteEmployee(bean.getId());
		}catch (Exception e) {
			e.printStackTrace();
		}

		session.invalidate();
		return "login";
	}
	@GetMapping("/changepassword")
	public String changePassword(HttpServletRequest request) {
		HttpSession session = request.getSession();
		if(session!=null)
		{
			return "changepassword";
		}
		else {
			return "login";
		}
	}
	@PostMapping("/changepassword")
	public String changePassword(String password,String confirmpassword,
			@SessionAttribute(name="bean") EmployeeBean bean,
			ModelMap map) {
	
		if(password.equals(confirmpassword))
		{
			service.changePassword(bean.getId(), password);
			map.addAttribute("msg", "password changed");
			
		}
		else {
			map.addAttribute("msg", "password not changed");
		}
		return "home";
	}
	
	
	
	@GetMapping("/updateprofile")
	public String updateProfile(HttpServletRequest request) {
		HttpSession session = request.getSession();
		if(session!=null)
		{
			return "updateprofile";
		}
		else {
			return "login";
		}
	}
	@PostMapping("/updateprofile")
	public String updateProfile(
			@SessionAttribute(name="bean") EmployeeBean bean,
			ModelMap map) {
		boolean check = service.updateEmployee(bean);
		if(check == true)
		{
			
			map.addAttribute("msg", "Profile updated");
			
		}
		else {
			map.addAttribute("msg", "Profile not updated");
		}
		return "home";
	}
	
}
