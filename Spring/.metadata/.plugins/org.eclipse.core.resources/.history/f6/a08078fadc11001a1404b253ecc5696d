package com.ustglobal.empspringmvc.dao;

import javax.persistence.EntityManager;
import javax.persistence.EntityManagerFactory;
import javax.persistence.EntityTransaction;
import javax.persistence.Persistence;

import com.ustglobal.empspringmvc.dto.EmployeeBean;

public class EmployeeDAOImplementation implements EmployeeDAO{

	private EntityManagerFactory factory = Persistence.createEntityManagerFactory("employee-unit");

	@Override
	public EmployeeBean login(int id, String password) {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public boolean register(EmployeeBean bean) {

		EntityManager manager = factory.createEntityManager();
		EntityTransaction transaction = manager.getTransaction();
		transaction.begin();
		try {
			manager.persist(bean);
			transaction.commit();
			return true;
		}catch (Exception e) {
			e.printStackTrace();
			return false;
		}

	}

	@Override
	public boolean deleteEmployee(int id) {
		EntityManager manager = factory.createEntityManager();
		EntityTransaction transaction = manager.getTransaction();
		transaction.begin();
		try {
			EmployeeBean bean = manager.find(EmployeeBean.class, id);
			manager.remove(bean);
			return true;
		}catch (Exception e) {
			e.printStackTrace();
			return false;
		}
	}

	@Override
	public EmployeeBean searchEmployee(int id) {
		EntityManager manager = factory.createEntityManager();
		EntityTransaction transaction = manager.getTransaction();
		transaction.begin();

		return manager.find(EmployeeBean.class, id);


	}

	@Override
	public boolean updateEmployee(EmployeeBean bean) {
		EntityManager manager = factory.createEntityManager();
		EntityTransaction transaction = manager.getTransaction();
		transaction.begin();
		try {
			EmployeeBean empBean = manager.find(EmployeeBean.class, bean);
			empBean.setName(bean.getName());
			empBean.setEmail(bean.getEmail());
			empBean.setGender(bean.getGender());
			empBean.setPassword(bean.getPassword());
			empBean.setDoj(bean.getDoj());
			transaction.commit();
			return true;
		}catch (Exception e) {
			e.printStackTrace();
			return false;
		}
	}

	@Override
	public boolean changePassword(EmployeeBean bean, String password) {
		EntityManager manager = factory.createEntityManager();
		EntityTransaction transaction = manager.getTransaction();
		transaction.begin();
		try {
			EmployeeBean empBean = manager.find(EmployeeBean.class, bean);
			empBean.setPassword(bean.getPassword());
			transaction.commit();
			return true;
		}catch (Exception e) {
			e.printStackTrace();
			return false;
		}
	}

}
