package com.ustglobal.lms.controller;

import java.util.Arrays;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.MediaType;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;

import com.ustglobal.lms.dto.Admin;
import com.ustglobal.lms.dto.AdminResponse;
import com.ustglobal.lms.dto.Librarian;
import com.ustglobal.lms.dto.Student;
import com.ustglobal.lms.service.AdminService;

@RestController
@CrossOrigin(origins = "*" , allowedHeaders = "*",allowCredentials = "true")
public class AdminController {

	@Autowired
	private AdminService service;

/**********************  Admin Login **********************/	
	@GetMapping(path="/login/{admin_id}/{admin_password}" ,produces = MediaType.APPLICATION_JSON_VALUE,
			consumes = MediaType.APPLICATION_JSON_VALUE,)
	public AdminResponse getAdmin(@PathVariable("admin_id")int admin_id,
		@PathVariable("admin_password")String admin_password) {
		AdminResponse response = new AdminResponse();
		Admin bean = service.adminLogin(admin_id, admin_password);
		if(bean!=null) {
			response.setStatusCode(201);
			response.setMessage("success");
			response.setDescription("Data Found");
			response.setAdmin(Arrays.asList(bean));
		}
		else {
			response.setStatusCode(201);
			response.setMessage("Failed");
			response.setDescription("Data Not Found ");
		}
		return response;
	}
	/********************** Adding Student **********************/
	@PostMapping(path="/addStudent" , consumes = MediaType.APPLICATION_JSON_VALUE,
			produces = MediaType.APPLICATION_JSON_VALUE)
	public AdminResponse addStudent(@RequestBody Student bean) {//sending entire responce not logical view
		AdminResponse response = new AdminResponse();
		if(service.addStudent(bean)) {
			response.setStatusCode(201);//ifsuccessfully added then success status code
			response.setMessage("success");
			response.setDescription("Data ad ded to db");
		}
		else {
			response.setStatusCode(401);//if successfully added then success status code
			response.setMessage("Failure");
			response.setDescription("Data Not added to db");
		}
		return response;
	}
	
	
	/************************ Remove Student *************************/
	
	@DeleteMapping(path= "/deleteStudent/{sid}" , produces = MediaType.APPLICATION_JSON_VALUE )
	public AdminResponse deleteStudent(@PathVariable("sid")int sid) {
		AdminResponse response = new AdminResponse();
		if(service.deleteStudent(sid)) {
			response.setStatusCode(201);//if successfully added then success status code
			response.setMessage("success");
			response.setDescription("Data Modified ");
		}else
		{
			response.setStatusCode(401);//if successfully added then success status code
			response.setMessage("Failure");
			response.setDescription("Data Not modified");
		}
		return response;
	}
	
	/**********************  Adding Librarian**********************/
	@PostMapping(path="/addLibrarian" , consumes = MediaType.APPLICATION_JSON_VALUE,
			produces = MediaType.APPLICATION_JSON_VALUE)
	public AdminResponse addLibrarian(@RequestBody Librarian bean) {//sending entire responce not logical view
		AdminResponse response = new AdminResponse();
		if(service.addLibrarian(bean)) {
			response.setStatusCode(201);//ifsuccessfully added then success status code
			response.setMessage("success");
			response.setDescription("Data ad ded to db");
		}
		else {
			response.setStatusCode(401);//if successfully added then success status code
			response.setMessage("Failure");
			response.setDescription("Data Not added to db");
		}
		return response;
	}
/************************ Remove Librarian *************************/
	
	@DeleteMapping(path= "/deleteLibrarian/{lid}" , produces = MediaType.APPLICATION_JSON_VALUE )
	public AdminResponse deleteLibrarian(@PathVariable("lid")int lid) {
		AdminResponse response = new AdminResponse();
		if(service.deleteLibrarian(lid)) {
			response.setStatusCode(201);//if successfully added then success status code
			response.setMessage("success");
			response.setDescription("Data Modified ");
		}else
		{
			response.setStatusCode(401);//if successfully added then success status code
			response.setMessage("Failure");
			response.setDescription("Data Not modified");
		}
		return response;
	}

}



